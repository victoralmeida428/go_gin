package helpers

import (
	"fmt"
	"testing"
	"time"
)



func TestGetWeek(t *testing.T) {
	type testCase struct {
		date         string
		expectedYear int
		expectedWeek int
	}
	layout := "02/01/2006"

	// Casos de teste com as semanas epidemiológicas
	testCases := []testCase{
		{"29/12/2024", 2025, 1},
		{"05/01/2025", 2025, 2},
		{"12/01/2025", 2025, 3},
		{"19/01/2025", 2025, 4},
		{"26/01/2025", 2025, 5},
		{"02/02/2025", 2025, 6},
		{"09/02/2025", 2025, 7},
		{"16/02/2025", 2025, 8},
		{"23/02/2025", 2025, 9},
		{"02/03/2025", 2025, 10},
		{"09/03/2025", 2025, 11},
		{"16/03/2025", 2025, 12},
		{"23/03/2025", 2025, 13},
		{"30/03/2025", 2025, 14},
		{"06/04/2025", 2025, 15},
		{"13/04/2025", 2025, 16},
		{"20/04/2025", 2025, 17},
		{"27/04/2025", 2025, 18},
		{"04/05/2025", 2025, 19},
		{"11/05/2025", 2025, 20},
		{"18/05/2025", 2025, 21},
		{"25/05/2025", 2025, 22},
		{"01/06/2025", 2025, 23},
		{"08/06/2025", 2025, 24},
		{"15/06/2025", 2025, 25},
		{"22/06/2025", 2025, 26},
		{"29/06/2025", 2025, 27},
		{"06/07/2025", 2025, 28},
		{"13/07/2025", 2025, 29},
		{"20/07/2025", 2025, 30},
		{"27/07/2025", 2025, 31},
		{"03/08/2025", 2025, 32},
		{"10/08/2025", 2025, 33},
		{"17/08/2025", 2025, 34},
		{"24/08/2025", 2025, 35},
		{"31/08/2025", 2025, 36},
		{"07/09/2025", 2025, 37},
		{"14/09/2025", 2025, 38},
		{"21/09/2025", 2025, 39},
		{"28/09/2025", 2025, 40},
		{"05/10/2025", 2025, 41},
		{"12/10/2025", 2025, 42},
		{"19/10/2025", 2025, 43},
		{"26/10/2025", 2025, 44},
		{"02/11/2025", 2025, 45},
		{"09/11/2025", 2025, 46},
		{"16/11/2025", 2025, 47},
		{"23/11/2025", 2025, 48},
		{"30/11/2025", 2025, 49},
		{"07/12/2025", 2025, 50},
		{"14/12/2025", 2025, 51},
		{"21/12/2025", 2025, 52},
		{"28/12/2025", 2025, 53},
		{"31/12/2023", 2024, 1},
		{"07/01/2024", 2024, 2},
		{"14/01/2024", 2024, 3},
		{"21/01/2024", 2024, 4},
		{"28/01/2024", 2024, 5},
		{"04/02/2024", 2024, 6},
		{"11/02/2024", 2024, 7},
		{"18/02/2024", 2024, 8},
		{"25/02/2024", 2024, 9},
		{"03/03/2024", 2024, 10},
		{"10/03/2024", 2024, 11},
		{"17/03/2024", 2024, 12},
		{"24/03/2024", 2024, 13},
		{"31/03/2024", 2024, 14},
		{"07/04/2024", 2024, 15},
		{"14/04/2024", 2024, 16},
		{"21/04/2024", 2024, 17},
		{"28/04/2024", 2024, 18},
		{"05/05/2024", 2024, 19},
		{"12/05/2024", 2024, 20},
		{"19/05/2024", 2024, 21},
		{"26/05/2024", 2024, 22},
		{"02/06/2024", 2024, 23},
		{"09/06/2024", 2024, 24},
		{"16/06/2024", 2024, 25},
		{"23/06/2024", 2024, 26},
		{"30/06/2024", 2024, 27},
		{"07/07/2024", 2024, 28},
		{"14/07/2024", 2024, 29},
		{"21/07/2024", 2024, 30},
		{"28/07/2024", 2024, 31},
		{"04/08/2024", 2024, 32},
		{"11/08/2024", 2024, 33},
		{"18/08/2024", 2024, 34},
		{"25/08/2024", 2024, 35},
		{"01/09/2024", 2024, 36},
		{"08/09/2024", 2024, 37},
		{"15/09/2024", 2024, 38},
		{"22/09/2024", 2024, 39},
		{"29/09/2024", 2024, 40},
		{"06/10/2024", 2024, 41},
		{"13/10/2024", 2024, 42},
		{"20/10/2024", 2024, 43},
		{"27/10/2024", 2024, 44},
		{"03/11/2024", 2024, 45},
		{"10/11/2024", 2024, 46},
		{"17/11/2024", 2024, 47},
		{"24/11/2024", 2024, 48},
		{"01/12/2024", 2024, 49},
		{"08/12/2024", 2024, 50},
		{"15/12/2024", 2024, 51},
		{"22/12/2024", 2024, 52},
		{"29/12/2019", 2020, 1},
		{"05/01/2020", 2020, 2},
		{"12/01/2020", 2020, 3},
		{"19/01/2020", 2020, 4},
		{"26/01/2020", 2020, 5},
		{"02/02/2020", 2020, 6},
		{"09/02/2020", 2020, 7},
		{"16/02/2020", 2020, 8},
		{"23/02/2020", 2020, 9},
		{"01/03/2020", 2020, 10},
		{"08/03/2020", 2020, 11},
		{"15/03/2020", 2020, 12},
		{"22/03/2020", 2020, 13},
		{"29/03/2020", 2020, 14},
		{"05/04/2020", 2020, 15},
		{"12/04/2020", 2020, 16},
		{"19/04/2020", 2020, 17},
		{"26/04/2020", 2020, 18},
		{"03/05/2020", 2020, 19},
		{"10/05/2020", 2020, 20},
		{"17/05/2020", 2020, 21},
		{"24/05/2020", 2020, 22},
		{"31/05/2020", 2020, 23},
		{"07/06/2020", 2020, 24},
		{"14/06/2020", 2020, 25},
		{"21/06/2020", 2020, 26},
		{"28/06/2020", 2020, 27},
		{"05/07/2020", 2020, 28},
		{"12/07/2020", 2020, 29},
		{"19/07/2020", 2020, 30},
		{"26/07/2020", 2020, 31},
		{"02/08/2020", 2020, 32},
		{"09/08/2020", 2020, 33},
		{"16/08/2020", 2020, 34},
		{"23/08/2020", 2020, 35},
		{"30/08/2020", 2020, 36},
		{"06/09/2020", 2020, 37},
		{"13/09/2020", 2020, 38},
		{"20/09/2020", 2020, 39},
		{"27/09/2020", 2020, 40},
		{"04/10/2020", 2020, 41},
		{"11/10/2020", 2020, 42},
		{"18/10/2020", 2020, 43},
		{"25/10/2020", 2020, 44},
		{"01/11/2020", 2020, 45},
		{"08/11/2020", 2020, 46},
		{"15/11/2020", 2020, 47},
		{"22/11/2020", 2020, 48},
		{"29/11/2020", 2020, 49},
		{"06/12/2020", 2020, 50},
		{"13/12/2020", 2020, 51},
		{"20/12/2020", 2020, 52},
		{"27/12/2020", 2020, 53},
		{"01/01/2023", 2023, 1},
		{"08/01/2023", 2023, 2},
		{"15/01/2023", 2023, 3},
		{"22/01/2023", 2023, 4},
		{"29/01/2023", 2023, 5},
		{"05/02/2023", 2023, 6},
		{"12/02/2023", 2023, 7},
		{"19/02/2023", 2023, 8},
		{"26/02/2023", 2023, 9},
		{"05/03/2023", 2023, 10},
		{"12/03/2023", 2023, 11},
		{"19/03/2023", 2023, 12},
		{"26/03/2023", 2023, 13},
		{"02/04/2023", 2023, 14},
		{"09/04/2023", 2023, 15},
		{"16/04/2023", 2023, 16},
		{"23/04/2023", 2023, 17},
		{"30/04/2023", 2023, 18},
		{"07/05/2023", 2023, 19},
		{"14/05/2023", 2023, 20},
		{"21/05/2023", 2023, 21},
		{"28/05/2023", 2023, 22},
		{"04/06/2023", 2023, 23},
		{"11/06/2023", 2023, 24},
		{"18/06/2023", 2023, 25},
		{"25/06/2023", 2023, 26},
		{"02/07/2023", 2023, 27},
		{"09/07/2023", 2023, 28},
		{"16/07/2023", 2023, 29},
		{"23/07/2023", 2023, 30},
		{"30/07/2023", 2023, 31},
		{"06/08/2023", 2023, 32},
		{"13/08/2023", 2023, 33},
		{"20/08/2023", 2023, 34},
		{"27/08/2023", 2023, 35},
		{"03/09/2023", 2023, 36},
		{"10/09/2023", 2023, 37},
		{"17/09/2023", 2023, 38},
		{"24/09/2023", 2023, 39},
		{"01/10/2023", 2023, 40},
		{"08/10/2023", 2023, 41},
		{"15/10/2023", 2023, 42},
		{"22/10/2023", 2023, 43},
		{"29/10/2023", 2023, 44},
		{"05/11/2023", 2023, 45},
		{"12/11/2023", 2023, 46},
		{"19/11/2023", 2023, 47},
		{"26/11/2023", 2023, 48},
		{"03/12/2023", 2023, 49},
		{"10/12/2023", 2023, 50},
		{"17/12/2023", 2023, 51},
		{"24/12/2023", 2023, 52},
		{"01/01/2012", 2012, 1},
		{"08/01/2012", 2012, 2},
		{"15/01/2012", 2012, 3},
		{"22/01/2012", 2012, 4},
		{"29/01/2012", 2012, 5},
		{"05/02/2012", 2012, 6},
		{"12/02/2012", 2012, 7},
		{"19/02/2012", 2012, 8},
		{"26/02/2012", 2012, 9},
		{"04/03/2012", 2012, 10},
		{"11/03/2012", 2012, 11},
		{"18/03/2012", 2012, 12},
		{"25/03/2012", 2012, 13},
		{"01/04/2012", 2012, 14},
		{"08/04/2012", 2012, 15},
		{"15/04/2012", 2012, 16},
		{"22/04/2012", 2012, 17},
		{"29/04/2012", 2012, 18},
		{"06/05/2012", 2012, 19},
		{"13/05/2012", 2012, 20},
		{"20/05/2012", 2012, 21},
		{"27/05/2012", 2012, 22},
		{"03/06/2012", 2012, 23},
		{"10/06/2012", 2012, 24},
		{"17/06/2012", 2012, 25},
		{"24/06/2012", 2012, 26},
		{"01/07/2012", 2012, 27},
		{"08/07/2012", 2012, 28},
		{"15/07/2012", 2012, 29},
		{"22/07/2012", 2012, 30},
		{"29/07/2012", 2012, 31},
		{"05/08/2012", 2012, 32},
		{"12/08/2012", 2012, 33},
		{"19/08/2012", 2012, 34},
		{"26/08/2012", 2012, 35},
		{"02/09/2012", 2012, 36},
		{"09/09/2012", 2012, 37},
		{"16/09/2012", 2012, 38},
		{"23/09/2012", 2012, 39},
		{"30/09/2012", 2012, 40},
		{"07/10/2012", 2012, 41},
		{"14/10/2012", 2012, 42},
		{"21/10/2012", 2012, 43},
		{"28/10/2012", 2012, 44},
		{"04/11/2012", 2012, 45},
		{"11/11/2012", 2012, 46},
		{"18/11/2012", 2012, 47},
		{"25/11/2012", 2012, 48},
		{"02/12/2012", 2012, 49},
		{"09/12/2012", 2012, 50},
		{"16/12/2012", 2012, 51},
		{"23/12/2012", 2012, 52},
	}

	for _, tc := range testCases {
		// Parse da string de data para time.Time
		date, err := time.Parse(layout, tc.date)
		if err != nil {
			t.Errorf("Erro ao analisar a data %s: %v", tc.date, err)
			continue
		}

		// Chama a função getWeek
		year, week := GetWeek(date)

		// Verifica se o resultado corresponde ao esperado
		if year != tc.expectedYear || week != tc.expectedWeek {
			t.Errorf("Para a data %s, esperado ano %d e semana %d, mas obteve ano %d e semana %d",
				tc.date, tc.expectedYear, tc.expectedWeek, year, week)
		}
	}
}

func TestLoop(t *testing.T){
	year := 2024
	x := GetFirstSunday(year)
	newYear, week := GetWeek(x)
	fmt.Println(newYear, week, x)
	for newYear==year {
		//cadastrar
		x = x.Add(7*Day)
		newYear, week = GetWeek(x)	
		if newYear>year {
			break
		}
		fmt.Println(newYear, week, x)
	}
	t.Error()
}